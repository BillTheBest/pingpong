!!! html
%html(lang="en")
  %head
    %title Pingpong - custom HTTP monitoring
    %script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js")
    %script(src="https://netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js")
    %script(src="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.8/c3.min.js")
    %script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.3/d3.min.js")
    %script(src="/jq-json-formatter.js")
    %script(src="/jqBootstrapValidation.js")
    %script(src="/checks.js")
    %link(href="https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet")
    %link(href="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.8/c3.min.css" rel="stylesheet")
    %link(href="http://fonts.googleapis.com/css?family=Raleway:400,500" rel="stylesheet" type="text/css")
    %link(href="/style.css" rel="stylesheet")
    :javascript
      !function(a,b){a("Keen","https://d26b395fwzu5fz.cloudfront.net/3.2.3/keen.min.js",b)}(function(a,b,c){var d,e,f;c["_"+a]={},c[a]=function(b){c["_"+a].clients=c["_"+a].clients||{},c["_"+a].clients[b.projectId]=this,this._config=b},c[a].ready=function(b){c["_"+a].ready=c["_"+a].ready||[],c["_"+a].ready.push(b)},d=["addEvent","setGlobalProperties","trackExternalLink","on"];for(var g=0;g<d.length;g++){var h=d[g],i=function(a){return function(){return this["_"+a]=this["_"+a]||[],this["_"+a].push(arguments),this}};c[a].prototype[h]=i(h)}e=document.createElement("script"),e.async=!0,e.src=b,f=document.getElementsByTagName("script")[0],f.parentNode.insertBefore(e,f)},this);

      var projectId = "#{@config.properties[:keen][:project_id]}";
      var readKey = "#{@config.properties[:keen][:read_key]}";
      var client;

      // make sure Keen IO environment variables are set
      if (projectId != "" && readKey != "") {

        // configure the global Keen Client
        client = new Keen({
          projectId: projectId,
          readKey: readKey
        });

        // visit queries.js to see what visualizations are configured
        window.Pingpong = {}
        window.Pingpong.collection = "#{@config.properties[:keen][:collection]}"

      } else {
        console.log("Keen IO environment variables are not set. Queries will not be run.");
      }

  %body
    %div.navbar{ :role => "navigation" }
      %div.container
        .row
          .col-md-8.col-xs-8
            %div.navbar-header
              .logo-container
                .nav-logo
                  %a{:href => "/"}
                    %img{:src => "/logo.png", :alt => "Pingpong"}
          .col-md-4.col-xs-4
            %div.navbar-right
              %ul.nav.nav-pills
                %li
                  %a.btn.btn-lg#btn-add-new{:href => "/check/new"}
                    +
                    %span.no-mobile
                      Add new

    - if @notice
      %div{:class => "alert alert-info", :role => "alert"}
        = @notice
    - if @error
      %div{:class => "alert alert-warning", :role => "alert"}
        = @error

    .container
      = yield
    
    %footer
      %p.small.text-muted
        Built with &hearts; by
        %a{:href => "https://keen.io"} Keen IO

:javascript
  $(document).ready(function() {
    $(function () { $("[data-toggle='tooltip']").tooltip(); });

    // This handles form validation
    $(function () { $("input,select,textarea").not("[type=submit]").jqBootstrapValidation(); } );

    var keenReadyFired = false;
    Keen.ready(function() {
      //Prevent this from executing twice
      if (keenReadyFired) {
        return;
      }
      keenReadyFired = true;
      
      $.each($(".extraction-container").last(), function(key, value) {
        var name = $(this).data("name");
        var numchecks = $(this).data("numchecks");
        var warnAmount = $(this).data("warnamount");
        var badAmount = $(this).data("badamount");

        var query = new Keen.Query("extraction", {
          eventCollection: Pingpong.collection,
          timeframe: $(this).data("timeframe"),
          latest: $(this).data("latest"),
          filters: [{"property_name":"check.name","operator":"eq","property_value":name}]
        });

        client.run(query, function(err, response) {
          var check = new Check($(".extraction-container"), response.result, warnAmount, badAmount, numchecks > #{Check::MIN_CHECK_LENGTH});
          check.createHtml();
        });
      });

      $.each($(".chart-container"), function(key, value) {
        var name = $(this).data("name");
        var targetProperty = $(this).data("targetproperty") || null;
        var interval = $(this).data("interval") || null;
        var queryType = $(this).data("querytype") || null;
        var groupBy = $(this).data("groupby") || null;
        var chartOptions = $(this).data("chartoptions") || null;

        var query = new Keen.Query(queryType, {
          eventCollection: Pingpong.collection,
          timeframe: $(this).data("timeframe"),
          targetProperty: targetProperty,
          interval: interval,
          groupBy: groupBy,
          filters: [{"property_name":"check.name","operator":"eq","property_value":name}]
        });

        var chart = client.draw(query, value, {
          library: "c3",
          chartType: $(this).data("charttype"),
          width: $(this).width(),
          height: $(this).height(),
          chartOptions: chartOptions
        });
      });
    });
    
    $('#toggle-compact').click(function() {
      var body = $('body');
      if (!$(body).hasClass('compact')) {
        $(body).addClass('compact');
      } else {
        $(body).removeClass('compact');
      }
    });
  });
